{"ast":null,"code":"import { API } from \"../config\"; // user register\n\nexport const userRegister = user => {\n  console.log(user);\n  return fetch(`${API}/register`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => response.json()).catch(error => console.log(error));\n}; // email confirmation\n\nexport const userConfirmation = token => {\n  return fetch(`${API}/verifyUser/${token}`, {\n    method: \"GET\"\n  }).then(response => response.json()).catch(error => console.log(error));\n}; // forget password\n\nexport const forgetpassword = email => {\n  return fetch(`${API}/forgetpassword`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email\n    })\n  }).then(res => res.json()).catch(error => console.log(error));\n}; //reset Password\n\nexport const resetPassword = (password, token) => {\n  return fetch(`${API}/resetPassword/${token}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password\n    })\n  }).then(res => res.json()).catch(error => console.log(error));\n}; // sign in\n\nexport const signin = (email, password) => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => res.json()).catch(error => console.log(error));\n}; // authenticate\n\nexport const authenticate = data => {\n  localStorage.setItem('jwt', JSON.stringify(data));\n}; //  to check if authenticated or not\n\nexport const isAuthenticated = () => {\n  if (localStorage.getItem('jwt')) {\n    return JSON.parse(localStorage.getItem('jwt'));\n  } else {\n    return false;\n  }\n}; // signout\n\nexport const signout = () => {\n  return fetch(`${API}/signout`, {\n    method: \"GET\"\n  }).then(res => res.json()).catch(error => console.log(error));\n};","map":{"version":3,"names":["API","userRegister","user","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","userConfirmation","token","forgetpassword","email","res","resetPassword","password","signin","authenticate","data","localStorage","setItem","isAuthenticated","getItem","parse","signout"],"sources":["O:/Afteroffice/react11am/src/api/userAPI.js"],"sourcesContent":["import { API } from \"../config\";\r\n\r\n\r\n// user register\r\nexport const userRegister = (user) => {\r\n    console.log(user)\r\n    return fetch(`${API}/register`, {\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\n// email confirmation\r\nexport const userConfirmation = (token)=>{\r\n    return fetch(`${API}/verifyUser/${token}`,{\r\n        method:\"GET\"\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\n// forget password\r\nexport const forgetpassword = (email) => {\r\n    return fetch(`${API}/forgetpassword`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({email})\r\n    })\r\n    .then(res=>res.json())\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\n//reset Password\r\nexport const resetPassword = (password, token) => {\r\n    return fetch(`${API}/resetPassword/${token}`,{\r\n        method:\"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({password})\r\n    })\r\n    .then(res=>res.json())\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\n// sign in\r\nexport const signin = (email, password) => {\r\n    return fetch(`${API}/signin`, {\r\n        method:\"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify({email, password})\r\n    })\r\n    .then(res=>res.json())\r\n    .catch(error=>console.log(error))\r\n}\r\n\r\n// authenticate\r\nexport const authenticate = (data) => {\r\n    localStorage.setItem('jwt', JSON.stringify(data))\r\n}\r\n\r\n//  to check if authenticated or not\r\nexport const isAuthenticated = () => {\r\n    if(localStorage.getItem('jwt')){\r\n        return JSON.parse(localStorage.getItem('jwt'))\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\n// signout\r\nexport const signout = () => {\r\n    return fetch(`${API}/signout`, {\r\n        method:\"GET\"\r\n    })\r\n    .then(res=>res.json())\r\n    .catch(error=>console.log(error))\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB,C,CAGA;;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;EAClCC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,OAAOG,KAAK,CAAE,GAAEL,GAAI,WAAR,EAAoB;IAC5BM,MAAM,EAAC,MADqB;IAE5BC,OAAO,EAAC;MACJC,MAAM,EAAE,kBADJ;MAEJ,gBAAe;IAFX,CAFoB;IAM5BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;EANsB,CAApB,CAAL,CAQNU,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,EASNC,KATM,CASAC,KAAK,IAAEb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CATP,CAAP;AAUH,CAZM,C,CAcP;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAS;EACrC,OAAOb,KAAK,CAAE,GAAEL,GAAI,eAAckB,KAAM,EAA5B,EAA8B;IACtCZ,MAAM,EAAC;EAD+B,CAA9B,CAAL,CAGNM,IAHM,CAGDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHX,EAINC,KAJM,CAIAC,KAAK,IAAEb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CAJP,CAAP;AAKH,CANM,C,CAQP;;AACA,OAAO,MAAMG,cAAc,GAAIC,KAAD,IAAW;EACrC,OAAOf,KAAK,CAAE,GAAEL,GAAI,iBAAR,EAAyB;IACjCM,MAAM,EAAC,MAD0B;IAEjCC,OAAO,EAAC;MACJC,MAAM,EAAE,kBADJ;MAEJ,gBAAe;IAFX,CAFyB;IAMjCC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;MAACS;IAAD,CAAf;EAN4B,CAAzB,CAAL,CAQNR,IARM,CAQDS,GAAG,IAAEA,GAAG,CAACP,IAAJ,EARJ,EASNC,KATM,CASAC,KAAK,IAAEb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CATP,CAAP;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMM,aAAa,GAAG,CAACC,QAAD,EAAWL,KAAX,KAAqB;EAC9C,OAAOb,KAAK,CAAE,GAAEL,GAAI,kBAAiBkB,KAAM,EAA/B,EAAiC;IACzCZ,MAAM,EAAC,MADkC;IAEzCC,OAAO,EAAE;MACLC,MAAM,EAAE,kBADH;MAEL,gBAAgB;IAFX,CAFgC;IAMzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACY;IAAD,CAAf;EANmC,CAAjC,CAAL,CAQNX,IARM,CAQDS,GAAG,IAAEA,GAAG,CAACP,IAAJ,EARJ,EASNC,KATM,CASAC,KAAK,IAAEb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CATP,CAAP;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMQ,MAAM,GAAG,CAACJ,KAAD,EAAQG,QAAR,KAAqB;EACvC,OAAOlB,KAAK,CAAE,GAAEL,GAAI,SAAR,EAAkB;IAC1BM,MAAM,EAAC,MADmB;IAE1BC,OAAO,EAAE;MACLC,MAAM,EAAE,kBADH;MAEL,gBAAe;IAFV,CAFiB;IAM1BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACS,KAAD;MAAQG;IAAR,CAAf;EANoB,CAAlB,CAAL,CAQNX,IARM,CAQDS,GAAG,IAAEA,GAAG,CAACP,IAAJ,EARJ,EASNC,KATM,CASAC,KAAK,IAAEb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CATP,CAAP;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMS,YAAY,GAAIC,IAAD,IAAU;EAClCC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BlB,IAAI,CAACC,SAAL,CAAee,IAAf,CAA5B;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAMG,eAAe,GAAG,MAAM;EACjC,IAAGF,YAAY,CAACG,OAAb,CAAqB,KAArB,CAAH,EAA+B;IAC3B,OAAOpB,IAAI,CAACqB,KAAL,CAAWJ,YAAY,CAACG,OAAb,CAAqB,KAArB,CAAX,CAAP;EACH,CAFD,MAGI;IACA,OAAO,KAAP;EACH;AACJ,CAPM,C,CAQP;;AACA,OAAO,MAAME,OAAO,GAAG,MAAM;EACzB,OAAO3B,KAAK,CAAE,GAAEL,GAAI,UAAR,EAAmB;IAC3BM,MAAM,EAAC;EADoB,CAAnB,CAAL,CAGNM,IAHM,CAGDS,GAAG,IAAEA,GAAG,CAACP,IAAJ,EAHJ,EAINC,KAJM,CAIAC,KAAK,IAAEb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CAJP,CAAP;AAKH,CANM"},"metadata":{},"sourceType":"module"}