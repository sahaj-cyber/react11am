{"ast":null,"code":"import { API } from \"../../../config\";\nimport { MY_ORDER_FAIL, MY_ORDER_REQUEST, MY_ORDER_SUCCESS, NEW_ORDER_FAIL, NEW_ORDER_REQUEST, NEW_ORDER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS } from \"../constants/orderConstant\";\nexport const placeOrder = (order, token) => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_ORDER_REQUEST\n    });\n    const response = await fetch(`${API}/placeorder`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(order)\n    }).then(res => res.json);\n    dispatch({\n      type: NEW_ORDER_SUCCESS,\n      payload: response\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ORDER_FAIL,\n      payload: error.error\n    });\n  }\n};\nexport const myOrders = (user_id, token) => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDER_REQUEST\n    });\n    const response = await fetch(`${API}/userorder/${user_id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    dispatch({\n      type: MY_ORDER_SUCCESS,\n      payload: response\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_FAIL,\n      payload: error.error\n    });\n  }\n};\nexport const orderDetails = (order_id, token) => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const response = await fetch(`${API}/orderdetails/${order_id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: response\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.error\n    });\n  }\n};","map":{"version":3,"names":["API","MY_ORDER_FAIL","MY_ORDER_REQUEST","MY_ORDER_SUCCESS","NEW_ORDER_FAIL","NEW_ORDER_REQUEST","NEW_ORDER_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","placeOrder","order","token","dispatch","type","response","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","payload","error","myOrders","user_id","orderDetails","order_id"],"sources":["O:/Afteroffice/react11am/src/components/reducer/actions/orderActions.js"],"sourcesContent":["import { API } from \"../../../config\"\r\nimport { MY_ORDER_FAIL, MY_ORDER_REQUEST, MY_ORDER_SUCCESS, NEW_ORDER_FAIL, NEW_ORDER_REQUEST, NEW_ORDER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS } from \"../constants/orderConstant\"\r\n\r\nexport const placeOrder = (order,token) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: NEW_ORDER_REQUEST\r\n        })\r\n\r\n        const response = await fetch(`${API}/placeorder`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(order)\r\n        })\r\n        .then(res=>res.json)\r\n\r\n        dispatch({\r\n            type: NEW_ORDER_SUCCESS,\r\n            payload: response\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: NEW_ORDER_FAIL,\r\n            payload: error.error\r\n        })\r\n    }\r\n}\r\n\r\nexport const myOrders = (user_id, token) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: MY_ORDER_REQUEST\r\n        })\r\n\r\n        const response = await fetch(`${API}/userorder/${user_id}`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        })\r\n        .then(res=>res.json())\r\n\r\n        dispatch({\r\n            type: MY_ORDER_SUCCESS,\r\n            payload: response\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: MY_ORDER_FAIL,\r\n            payload: error.error\r\n        })\r\n    }\r\n}\r\n\r\nexport const orderDetails = (order_id, token) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const response = await fetch(`${API}/orderdetails/${order_id}`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        })\r\n        .then(res=>res.json())\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: response\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.error\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,gBAA1C,EAA4DC,cAA5D,EAA4EC,iBAA5E,EAA+FC,iBAA/F,EAAkHC,kBAAlH,EAAsIC,qBAAtI,EAA6JC,qBAA7J,QAA0L,4BAA1L;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAOC,KAAP,KAAiB,MAAOC,QAAP,IAAoB;EAC3D,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAAET;IADD,CAAD,CAAR;IAIA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEhB,GAAI,aAAR,EAAqB;MAC7CiB,MAAM,EAAE,MADqC;MAE7CC,OAAO,EAAE;QACLC,MAAM,EAAE,kBADH;QAEL,gBAAe,kBAFV;QAGLC,aAAa,EAAG,UAASR,KAAM;MAH1B,CAFoC;MAO7CS,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,KAAf;IAPuC,CAArB,CAAL,CAStBa,IATsB,CASjBC,GAAG,IAAEA,GAAG,CAACC,IATQ,CAAvB;IAWAb,QAAQ,CAAC;MACLC,IAAI,EAAER,iBADD;MAELqB,OAAO,EAAEZ;IAFJ,CAAD,CAAR;EAIH,CApBD,CAqBA,OAAMa,KAAN,EAAY;IACRf,QAAQ,CAAC;MACLC,IAAI,EAAEV,cADD;MAELuB,OAAO,EAAEC,KAAK,CAACA;IAFV,CAAD,CAAR;EAIH;AACJ,CA5BM;AA8BP,OAAO,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUlB,KAAV,KAAoB,MAAOC,QAAP,IAAoB;EAC5D,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAAEZ;IADD,CAAD,CAAR;IAIA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEhB,GAAI,cAAa8B,OAAQ,EAA7B,EAA+B;MACvDb,MAAM,EAAE,KAD+C;MAEvDC,OAAO,EAAE;QACLC,MAAM,EAAE,kBADH;QAEL,gBAAe,kBAFV;QAGLC,aAAa,EAAG,UAASR,KAAM;MAH1B;IAF8C,CAA/B,CAAL,CAQtBY,IARsB,CAQjBC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EARY,CAAvB;IAUAb,QAAQ,CAAC;MACLC,IAAI,EAAEX,gBADD;MAELwB,OAAO,EAAEZ;IAFJ,CAAD,CAAR;EAIH,CAnBD,CAoBA,OAAMa,KAAN,EAAY;IACRf,QAAQ,CAAC;MACLC,IAAI,EAAEb,aADD;MAEL0B,OAAO,EAAEC,KAAK,CAACA;IAFV,CAAD,CAAR;EAIH;AACJ,CA3BM;AA6BP,OAAO,MAAMG,YAAY,GAAG,CAACC,QAAD,EAAWpB,KAAX,KAAqB,MAAOC,QAAP,IAAoB;EACjE,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAAEN;IADD,CAAD,CAAR;IAIA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEhB,GAAI,iBAAgBgC,QAAS,EAAjC,EAAmC;MAC3Df,MAAM,EAAE,KADmD;MAE3DC,OAAO,EAAE;QACLC,MAAM,EAAE,kBADH;QAEL,gBAAe,kBAFV;QAGLC,aAAa,EAAG,UAASR,KAAM;MAH1B;IAFkD,CAAnC,CAAL,CAQtBY,IARsB,CAQjBC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EARY,CAAvB;IAUAb,QAAQ,CAAC;MACLC,IAAI,EAAEL,qBADD;MAELkB,OAAO,EAAEZ;IAFJ,CAAD,CAAR;EAIH,CAnBD,CAoBA,OAAMa,KAAN,EAAY;IACRf,QAAQ,CAAC;MACLC,IAAI,EAAEP,kBADD;MAELoB,OAAO,EAAEC,KAAK,CAACA;IAFV,CAAD,CAAR;EAIH;AACJ,CA3BM"},"metadata":{},"sourceType":"module"}